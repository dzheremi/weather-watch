<div id="mapdiv"></div>
<script src="http://www.openlayers.org/api/OpenLayers.js"></script>
<script>
  map = new OpenLayers.Map("mapdiv");
  map.addLayer(new OpenLayers.Layer.OSM());

  epsg4326 =  new OpenLayers.Projection("EPSG:4326"); //WGS 1984 projection
  projectTo = map.getProjectionObject(); //The map projection (Spherical Mercator)

  var lonLat = new OpenLayers.LonLat(142.91, -28.50).transform(epsg4326, projectTo);

  var zoom = 5;
  map.setCenter (lonLat, zoom);

  var vectorLayer = new OpenLayers.Layer.Vector("Overlay");

  <% @stations.each do |s| %>

  var station_<%= s.id %> = new OpenLayers.Feature.Vector(
      new OpenLayers.Geometry.Point(<%= s.longitude %>, <%= s.latitude %>).transform(epsg4326, projectTo),
      {description:'<h3><%= link_to s.name, :action => :station, :id => s %></h3>'} ,
      {externalGraphic: '<%= image_path('marker.png') %>', graphicHeight: 25, graphicWidth: 21, graphicXOffset:-12, graphicYOffset:-25  }
  );
  vectorLayer.addFeatures(station_<%= s.id %>);

  <% end %>

  map.addLayer(vectorLayer);

  //Add a selector control to the vectorLayer with popup functions
  var controls = {
    selector: new OpenLayers.Control.SelectFeature(vectorLayer, { onSelect: createPopup, onUnselect: destroyPopup })
  };

  function createPopup(feature) {
    feature.popup = new OpenLayers.Popup.FramedCloud("pop",
        feature.geometry.getBounds().getCenterLonLat(),
        null,
        '<div class="markerContent">'+feature.attributes.description+'</div>',
        null,
        true,
        function() { controls['selector'].unselectAll(); }
    );
    //feature.popup.closeOnMove = true;
    map.addPopup(feature.popup);
  }

  function destroyPopup(feature) {
    feature.popup.destroy();
    feature.popup = null;
  }

  map.addControl(controls['selector']);
  controls['selector'].activate();

</script>